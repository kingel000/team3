<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main.project.web.member.dao.IMemberDAO">
	<select id="checkMemberId" parameterType="String"
		resultType="memberVO">
		SELECT * FROM member WHERE id = #{email} AND user_yn='yes'
	</select>

	<select id="selectMember" parameterType="memberVO"
		resultType="memberVO">
		SELECT * FROM member WHERE email = #{email} AND user_yn='yes'
	</select>

	<insert id="insertMember" parameterType="memberVO">
		INSERT INTO
		member VALUES (#{id},#{email},#{pwd},#{nick_name},'yes',#{rank})
	</insert>

	<update id="updateMember" parameterType="memberVO">
		UPDATE member
		SET
		pwd=#{pwd}, nick_name=#{nick_name},rank=#{rank}
		WHERE
		id=#{id}
	</update>

	<update id="rankupdate" parameterType="String">

		UPDATE member
		SET rank = 'E'
		WHERE id = #{member_id}
	</update>

	<update id="deleteMember" parameterType="memberVO">
		UPDATE member SET user_yn='no'
		WHERE id=#{id} AND pwd=#{pwd}
	</update>
	
	<select id="selectAllMember" resultType="memberVO">
		SELECT * FROM member AND user_yn='yes' ORDER BY ID asc
	</select>
	
	<update id="admindeleteMember" parameterType="memberVO">
		UPDATE
		member SET user_yn='no'
		WHERE id=#{id}
		
	</update>

	<!--  
	<select id="selectMemberEmail" parameterType="MemberFindVO"
		resultType="memberVO">
		SELECT ID FROM member WHERE id = #{value}
	</select>
	
	<select id="selectMembernick_name" parameterType="MemberFindVO"
		resultType="memberVO">
		SELECT nick FROM member WHERE nick_name = #{value}
	</select>
	-->
	
	<select id="selectFindList" parameterType="findVO" resultType="memberVO">
		SELECT * FROM member WHERE user_yn='yes'
		<if test="category=='id'">
			id like '%'||#{findText}||'%'
		</if>
		<if test="category=='nick_name'">
			nick_name like '%'||#{findText}||'%'
		</if>
	</select>
	
	<!-- 통계 -->
	<select id="totalMember" resultType="Integer">
		SELECT COUNT(*) FROM member
	</select>
	
	<!-- member page -->
	<select id="memberPage" resultType="memberVO" parameterType="hashMap">
		select * from (
		select id, pwd, nick_name, rank,
		row_number() over(order by id desc) as rNum
		from member where user_yn='yes') 
		mb where rNum between #{displayPost} and #{postNum} order by id desc
	</select>
</mapper>
