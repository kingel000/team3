<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main.project.web.product.dao.IProductDAO">
	<insert id="insertProduct" parameterType="productVO">
	INSERT INTO product VALUES
		<choose>
			<when test = "category == '웹 개발'">
				(('A'||LPAD(product_num_seq_A.nextval,3,0)),#{category},#{product_title},#{expert_id},
				#{product_info},sysdate)
			</when>
			 <when test = "category == '모바일앱·웹'">
				(('B'||LPAD(product_num_seq_B.nextval,3,0)),#{category},#{product_title},#{expert_id},
				#{product_info},sysdate)
			</when>
			<when test = "category == '게임'">
				(('C'||LPAD(product_num_seq_C.nextval,3,0)),#{category},#{product_title},#{expert_id},
				#{product_info},sysdate)
			</when>
			<when test = "category == '응용프로그래밍'">
				(('D'||LPAD(product_num_seq_D.nextval,3,0)),#{category},#{product_title},#{expert_id},
				#{product_info},sysdate)
			</when>
			<when test = "category == '기타'">
				(('E'||LPAD(product_num_seq_E.nextval,3,0)),#{category},#{product_title},#{expert_id},
				#{product_info},sysdate)
			</when> 
		</choose>
	</insert>
	<update id="updateProduct" parameterType="productVO">
		UPDATE product SET
		category=#{category},product_title=#{product_title},product_info=#{product_info}
		WHERE product_num=#{product_num}
	</update>
	<delete id="deleteProduct" parameterType="productVO">
		DELETE FROM product
		WHERE product_num=#{product_num}
	</delete>
	<select id="selectProduct" parameterType="String" resultType="productVO">
		SELECT * FROM product
		WHERE product_num=#{product_num}
	</select>
	<select id="selectListProduct" resultType="productVO">
		SELECT * FROM product
		WHERE expert_id=#{id}
	</select>
	<select id="selectAllListProduct" resultType="productVO">
		SELECT * FROM product
	</select>
	<select id="selectCategory" resultType="productVO">
		SELECT * FROM product
		WHERE category=#{category}
	</select>
	<select id="select_NickName" parameterType="String" resultType="memberVO" >
		SELECT * FROM MEMBER WHERE ID = #{expert_id}
	</select>
	
	<select id="selectFindList" parameterType="findVO" resultType="productVO">
		SELECT * FROM product WHERE 
		<if test="category=='category'">
			category like '%'||#{findText}||'%'
		</if>
		<if test="category=='expert_id'">
			expert_id like '%'||#{findText}||'%'
		</if>
	</select>

		<select id="select_Id" parameterType="String" resultType="memberVO" >
		SELECT * FROM PRODUCT WHERE product_num = #{product_num}
	</select>

	
	<select id="mainFindList" parameterType="String" resultType="productVO">
		SELECT * FROM product WHERE product_title like '%'||#{mainFindText}||'%'
	</select>
	
	<select id="newProductList" resultType="productVO">
		SELECT * FROM 
		(SELECT * FROM product ORDER BY product_date DESC) 
		WHERE <![CDATA[ ROWNUM >= 1 AND ROWNUM <= 10 ]]>
	</select>
	

	<select id="newAlignmentList" parameterType="String" resultType="productVO">
      SELECT * FROM (SELECT * FROM product WHERE category=#{category}) ORDER BY product_date DESC
   </select>
   <select id="nameAlignmentList" parameterType="String" resultType="productVO">
      SELECT * FROM (SELECT * FROM product WHERE category=#{category}) ORDER BY product_title
   </select>

	<delete id="deleteProductId" parameterType="String">
		DELETE FROM product
		WHERE expert_id=#{id}
	</delete>

	<!-- 게시물 정렬 후 설정한 범위 select -->
	<select id="listPage" resultType="productVO" parameterType="hashMap">
	select product_num, category, product_title, expert_id, product_date
	from (
	select product_num, category, product_title, expert_id, product_date,
	row_number() over(order by product_num desc) as rNum
	from product
	) mb
	where expert_id=#{id} and
	rNum between #{displayPost} and #{postNum} order by product_num desc
	</select>
	
	<!-- 게시물 총 갯수 -->
	<select id="count" resultType="int" parameterType="String">
		select count(product_num) from product where expert_id=#{id}
	</select>
	
	
</mapper>
